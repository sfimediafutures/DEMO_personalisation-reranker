---
import ImageItem from "../components/ImageItem.astro"
export interface Props {
    title?: string
}

const n = 20
let n_rec: Array<number>
n_rec = []
Array.from({ length: n }, (x, i) => {n_rec.push(i)})

import settings from '../../config.json'
const {url=settings.API_SERVER_URL} = Astro.props;
---
<section class="content" id='content'>
    <div class="content_info">
    <div class="primary_image">
        <img id="primary_image" src="https://via.placeholder.com/200X300" alt="">
    </div>
    <div class="text_content">
        <h5 id='item_title'>
            Title!!
        </h5>
        <p id='item_body'>
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
        </p>
    </div>
    <div class="features">
        <p id='saturation'>Saturation: </p>
        <p id="sharpness">Sharpness: </p>
        <p id="entropy">Entropy: </p>
        <!-- <p id="contrast">Contrast: </p>
        <p id="colorfullness">Colorfullness: </p>
        <p id="brightness">Brightness: </p> -->
    </div>
    </div>
    </section>
<div class='main'>
    <div class="grad_container">
        <div class="gradient_image" id="gradient_image"></div>
        <img src="" alt="" class="main_img" id='main_img'>
    </div>
    
<div id='one'>

<section class="initial_homepage">
    <h2>Mainstream User</h2>
    <div class='user-explanation'>
    <div class="profile">
        <img src="/assets/mainstream.png" alt="">
    </div>
        <p>Judging by the rating history, this person seems to prefer very popular mainstream movies. Clasically, such users are treated better by standard recommendation algorithms, maintaining the same popularity level of suggested movies to watch. Not much change in reranking is expected here - the recommendation list is supposedly already rather fitting.</p>
    </div>
</section>
<h3 class='session_header'>What our mainstream user likes</h3>
<section class="item_recommendation" id='first'>
    {n_rec.map((i) => (
        <ImageItem id={`${i}`}></ImageItem>
    ))}
</section>

<h3 class='session_header'>A regular SVD recommendation</h3>
<section class="item_recommendation" id='second'>
    {n_rec.map((i) => (
        <ImageItem id={`${i}`}></ImageItem>
    ))}
</section>

<h3 class='session_header'>SVD-Reranked recoommendation taking our user preference into account</h3>
<section class="item_recommendation" id='third'>
    {n_rec.map((i) => (
        <ImageItem id={`${i}`} ></ImageItem>
    ))}
</section>
</div>

<div id='two'>
    <section class="initial_homepage">
        <h2>Niche User</h2>
        <div class='user-explanation'>
            <div class="profile">
                <img src="/assets/niche.png" alt="">
            </div>
                <p>This person is less fond of mainstream movies and potentially would not be satisfied with a standard recommendation with higher popularity. The reranking effect is expected to be more visible in such case, lowering the popularity level of recommended movies.</p>
            </div>
    </section>
    
    <h3 class='session_header'>What our niche user likes</h3>
    <section class="item_recommendation" id='fourth'>
        {n_rec.map((i) => (
            <ImageItem id={`${i}`}></ImageItem>
        ))}
    </section>
    
    <h3 class='session_header'>A regular SVD recommendation</h3>
    <section class="item_recommendation" id='fifth'>
        {n_rec.map((i) => (
            <ImageItem id={`${i}`}></ImageItem>
        ))}
    </section>

    <h3 class='session_header'>SVD-Reranked recommendation taking our user preference into account</h3>
    <section class="item_recommendation" id='sixth'>
        {n_rec.map((i) => (
            <ImageItem id={`${i}`}></ImageItem>
        ))}
    </section>
    </div>
</div>
<section>
    <div class="expl_one_parent">
    <h2>Explanation</h2>
    <div class="expl_one">
        <div class="expl_one_left">
            <p>This Demo is based on the research of PHD Candidate Anastasiia Klimashevskaia @ SFI MediaFutures, UIB, who provided the recommendations and recommender system, and Developed by Research Assistant Snorre Alvsvåg @ SFI MediaFutures, UIB, who provided the full stack application.</p>
            <p>It is aimed at demonstrating how a personalized approach can be utilized to adjust the recommendation popularity to the preference of each particular user. Two example users have been selected - one has strong affinity towards "mainstream" and highly popular movies, while the other one is gravitating more towards less popular and niche movies. Traditionally popularity bias mitigation approaches have been exposing every user to less popular items in the same manner to promote less known content. This approach, however, takes into consideration every viewer's watching history attempting to gauge their interest towards popular/unpopular movies and only adjust the recommendation accordingly. Since classic recommender systems are known for recommending mostly popular items to every user, the reranker is expected to have less influence on popularity-aligned users, while the strongest changes are predicted to be observed in the recommendation for the niche items. The algorithm will attempt to lower the general popularity of recommended items, while still retaining an acceptable relevance and accuracy. Note: The users with extremely niche preferences are unfortunately practically treated as outliers - the algorithm has a hard time of finding highly relevant niche items to safely recommend without a significant loss in accuracy.</p>
        </div>
        <div class="expl_one_right">
            <a href="">
            <svg width="98" height="96" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M48.854 0C21.839 0 0 22 0 49.217c0 21.756 13.993 40.172 33.405 46.69 2.427.49 3.316-1.059 3.316-2.362 0-1.141-.08-5.052-.08-9.127-13.59 2.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015 4.934.326 7.523 5.052 7.523 5.052 4.367 7.496 11.404 5.378 14.235 4.074.404-3.178 1.699-5.378 3.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283 0-5.378 1.94-9.778 5.014-13.2-.485-1.222-2.184-6.275.486-13.038 0 0 4.125-1.304 13.426 5.052a46.97 46.97 0 0 1 12.214-1.63c4.125 0 8.33.571 12.213 1.63 9.302-6.356 13.427-5.052 13.427-5.052 2.67 6.763.97 11.816.485 13.038 3.155 3.422 5.015 7.822 5.015 13.2 0 18.905-11.404 23.06-22.324 24.283 1.78 1.548 3.316 4.481 3.316 9.126 0 6.6-.08 11.897-.08 13.526 0 1.304.89 2.853 3.316 2.364 19.412-6.52 33.405-24.935 33.405-46.691C97.707 22 75.788 0 48.854 0z" fill="#fff"/></svg>
            </a>
            <p>Code found at <span><a class="inline_link" href="">github.com/sfimediafutures/DEMO_personalisation-reranker</a></span></p>
            <a href="https://link.springer.com/chapter/10.1007/978-3-031-09316-6_8">
                <img src="/assets/paper.png" alt="">
            </a>
            <p>Relevant paper by PHD Candidate Anastasiia Klimashevskaia</p>
        </div>
    </div>
</div>
<img id='guide'src="/assets/guide.png" alt="">
<div class='expl_two'>
<p>
    Developers note:
    The demo is slow to load images due to how we gather image information, and the lack of cached image url’s. As of date it is based on a chain of API calls originating from the TMDB API Service.
</p>
</div>
<div class='footer_main'>
    <img src="/assets/MF-LOGO-WHITE-2x.png" alt="">
    <h3>Demo brought to you by SFI MediaFutures</h3>
</div>
</section>

<style>
    .footer_main { 
        display: flex;
        width: 100%;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 10rem 0 8rem 0;
    }
    .footer_main > img {
        width: 400px;
    }
    .footer_main > h3 {
        text-align: center;
        font-weight: 300;
        font-size: 30px;
        margin: -6rem 0 0 0;
    }

    #guide {
        width: 90%;
        padding: 7rem 5% 0 5%;
    }
    .expl_one_parent {
        display: flex;
        align-items: center;
        flex-direction: column;

    }
    .expl_one_parent > h2 {
        font-size: 30px;
        margin: 5rem 0 5rem 0;
        border-bottom: 2px solid #fff;
    }
    .expl_two {
        display: flex;
        justify-content: center;
    }

    .expl_two > p {
        width: 600px;
        padding: 3rem .3rem 0 .3rem;
    }
    .expl_one {
        max-width: 1400px;
        display: flex;
        padding: 0 2rem 0 2rem;
        gap: 3%;
        flex-wrap: wrap;
    }

    .expl_one_left {
        text-align: center;
        width: 55%;
        min-width: 350px;
        padding: 0 1rem 0 0;
        border-bottom: 2px solid #fff;
        border-right: 2px solid #fff;
    }


    .expl_one_right {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: -0.6rem 0 0 0;
        padding: 0 0 0 .4rem;
        width: 40%;
        min-width: 200px;
        border-bottom: 2px solid #fff;
        border-left: 2px solid #fff;

    }


    .expl_one_right > a > svg {
        scale: 1.5;
        height: 7rem;
    }

    .inline_link {
        text-decoration: none;
        color: #fff;
    }

    .expl_one_right >  a > img {
        padding: 2rem 0 0 0;
        width: 200px;
    }    
    .user-explanation {
        margin: 0 0 1rem 3rem;
        display: flex;

    }

    .user-explanation > p {
        margin: 0 1rem 0 2rem;
        width: 70%;
    }

    .profile {
        width: 150px;
        height: 150px;
        background-color: #fff;
        border-radius: 50%;
        overflow: hidden;
        border: 3px solid rgba(0, 0, 0, 0.6);
        box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    }

    .profile > img {
        width: 120%;
        position: relative;
        left: -14px;


    }
    .main {
        display: flex;
        max-width: 100%;
        flex-direction: row;
    }

    #one {
        width: 50%;
    }

    #two {
        width: 50%;
    }

    .show {
        animation: fadeIn .5s forwards;
    }

    @-webkit-keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @-webkit-keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
    @keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
    .hidden {
        -webkit-animation: fadeOut .2s;
        animation: fadeOut .2s;
    }
    :root {
        --slider-index: 0;
    }
    body {
        background-color: #020A14;
    }
    .features {
        margin: 2rem 0 0 2rem;
    }
    .features > p {
        padding: 0;
        margin: 0;
        font-family: K2D;
        font-size: 20px;
        font-weight: 300;
        line-height: 30px;
        letter-spacing: 0em;
        text-align: left;

    }
    .tile {
        display: flex;
        flex-direction: row;
        align-items: center;
        
    }
    .tile > p {
        padding: 0 0 0 1rem;
    }
    .color_tiles {
        width: 10%;
        margin: 2rem 0 0 0;
    }
    #tile1 {
        height: 40px;
        width: 40px;
        background-color: #fff;
    }
    #tile2 {
        height: 40px;
        width: 40px;
        background-color: #fff;
    }
    #tile3 {
        height: 40px;
        width: 40px;
        background-color: #fff;
    }
    #tile4 {
        height: 40px;
        width: 40px;
        background-color: #fff;
    }
    .color_wheel {
        width: 180px;
        height: 180px;
        margin: 2rem 0 0 0;
        border-radius: 50%;
        background: conic-gradient(from 180deg at 50% 50%, #020A14 -52.5deg, #ACC5D0 43.12deg, #DC2630 136.88deg, #588495 223.05deg, #020A14 307.5deg, #ACC5D0 403.12deg);
    }

    .session_header {
        margin: 0 0 1rem 3rem;
        color: #fff;
        font-family: 'K2D', serif;
        font-weight: 200;
        font-style: normal;
    }
    h2 {
        text-align: center;
        color: #fff;
        font-family: 'K2D', serif;
        font-style: normal;
        font-weight: 200;
        font-size: 25px;
        line-height: 30px;
    }
    h3 {
        color: #fff;
        font-family: 'K2D', serif;
        font-style: normal;
    }

    .text_content {
        margin: 1rem 0 0 1rem;
        width: 35%;
    }

    .text_content > h5 {
        margin: 0;
        padding: 0;
        color: #fff;
        font-family: 'K2D', serif;
        font-style: normal;
        font-weight: 200;
        font-size: 25px;
        line-height: 30px;
    }

    p {
        color: #fff;
        font-family: 'K2D', serif;
        font-size: 16px;
        font-weight: 300;
        line-height: 30px;
        letter-spacing: 0em;
        text-align: left;

    }
    
    body {
        background-color: #181818;
    }

    .item_recommendation {
        display: flex;
        overflow-y: scroll;
        overflow-y: hidden;
        margin: 0rem 3rem 0 3rem;
        

        -ms-overflow-style: none;  /* Internet Explorer 10+ */
        scrollbar-width: none;  /* Firefox */
    }

    .item_recommendation::-webkit-scrollbar {
        display: none;  /* Safari and Chrome */
    }

    .content {
        display: none;
        opacity: 0;
        width: 100%;
        flex-direction: column;
    }
    .content_info {
        width: 100%;
        margin: 2rem 3rem 3.5rem 3rem;
        align-items: center;
        display: flex;
    }

    .primary_image {
        width: 200px;
        height: 300px;
        margin: 1rem 0 0 0;
    }
    #primary_image{
        width: 100%;
        height: 100%;
    }
    
    .grad_container {
        width: 100%;
        height: auto;
    }
    .main_img {
        width: 100%;
        height: auto;
        z-index: -100;
        position: absolute;
        top: -10px;
        object-fit: fill;
    }
    .gradient_image {
        top: -10px;
        z-index: -90;
        object-fit: fill;
        height: 120%;
        position: absolute;
        width: 100%;
        background: linear-gradient(180deg, rgba(0, 0, 0, 0.13) 0%, #181818 20.00%) ;
    }

    #third {

    }
</style>

<script type="module" is:inline defer define:vars={{url}}>
    // ======================= API CALLS =======================
	async function getData(url) {
		const response = await fetch(url)
		return response.json()
	}

    async function getImageFromSource(tmdbId){
        const f = await fetch(`${url}/api/movies/image/${tmdbId}`)
        const j = await f.json()
        return j;
    }

    async function getPosters(user, section, rec) {
        const data = await getData(`${url}/api/recommendation/${user}/${rec}`)
        await Promise.all(data.movies.map(async (element, index) => {
            const top20 = document.getElementById(section)
            const item = top20.querySelector(`#image_item_${index}`)
            const item_detail = await getImageFromSource(element.tmdbId)
            item.src = `https://image.tmdb.org/t/p/w200/${item_detail.poster_path}`
            item.dataset.id = element.tmdbId
		 }))

    }
    // ========================= MAIN ==========================
    const user1 = 485
    const user2 = 92

    async function loadContent() {
        // User1 
        getPosters(user1, 'first', 'original')
        getPosters(user1, 'second', 'SVD')
        getPosters(user1, 'third', 'SVD-Reranked')

        // User2
        getPosters(user2, 'fourth', 'original')
        getPosters(user2, 'fifth', 'SVD')
        getPosters(user2, 'sixth', 'SVD-Reranked')

    
    }

    async function showDetails(movie_id) {
        const response = await getImageFromSource(`${movie_id}`)
        
        const data = response
        const content = document.getElementById('content')
        content.classList.remove('hidden')
        content.style.display='flex'
        content.classList.add('show')
        

        // Get elements
        const main_image = document.getElementById('main_img')
        const primary_image = content.querySelector('#primary_image')
        const title = content.querySelector('#item_title')
        const bodytext = content.querySelector('#item_body')

        const saturation = content.querySelector('#saturation')
        const sharpness = content.querySelector('#sharpness')
        const entropy = content.querySelector('#entropy')
        const contrast = content.querySelector('#contrast')
        const colorfullness = content.querySelector('#colorfullness')
        const brightness = content.querySelector('#brightness')

        // Set elemets
        primary_image.src = `https://image.tmdb.org/t/p/w200${data.poster_path}`

        // title.textContent = `${data.Title} (${data.Released})`
        main_image.src = `https://image.tmdb.org/t/p/w1280${data.backdrop_path}`
        title.textContent = `${data.original_title}`
        bodytext.textContent = data.overview
  
        saturation.textContent = `Popularity: ${data.popularity}`
        sharpness.textContent = `Vote Average: ${data.vote_average}`
        entropy.textContent = `Vote Count: ${data.vote_count}`
        // contrast.textContent = `Contrast: ${data.contrast.toFixed(2)}`
        // colorfullness.textContent = `Colorfullness: ${data.colorfulness.toFixed(2)}`
        // brightness.textContent = `Brightness: ${data.brightness.toFixed(2)}`

        const main_img = document.getElementById('gradient_image')
        main_img.style.background = "linear-gradient(180deg, rgba(0, 0, 0, 0.13) 0%, #181818 50.00%)"
    }

    function goHome() {
        const content = document.getElementById('content')
        const main_img = document.getElementById('gradient_image')
        
        content.classList.add('hidden')
        content.classList.remove('show')
        setTimeout(() => {
            
            content.style.display='none';
            main_img.style.background = "#181818"
            
        }, 200)
        
    }
    // ========================= LOGIC ==========================
    document.addEventListener('click', e => {

        if (e.target.matches('.movie')) {

            showDetails(e.target.dataset.id)
        }

        if (e.target.matches('.one') || e.target.matches('.header-img')){

            goHome()
        }
    });


    // ========================= DEFER ==========================

    loadContent()
</script>
